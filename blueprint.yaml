###########################################################
# Parameters
###########################################################

parameters:
  - name: appServices
    type: object
#   - name: environment
#     type: string

###########################################################
# Steps
###########################################################
stages:
- stage: deploy
  jobs:
  - deployment: DeploySomething1
    displayName: deploy something 1
    # creates an environment if it doesn't exist
    environment: 'development'
    strategy:
      runOnce:
        deploy:
          steps:
          - script: echo something
  - deployment: DeploySomething2
    displayName: deploy something 2
    # creates an environment if it doesn't exist
    environment: 'sandpit'
    strategy:
      runOnce:
        deploy:
          steps:
          - script: echo something

#   - stage: 'GIT_TAG'
#     displayName: Create a git tag for this version
#     jobs:
# #         environment: development
#       - ${{ each service in parameters.appServices }}:
#         - job: SAY_HELLO_${{ upper(replace(replace(service.applicationServiceID,' ' ,'_'),'-','_')) }}
#           displayName: Say Hello ${{ upper(replace(replace(service.applicationServiceID,' ' ,'_'),'-','_')) }}

#           #variables:
#           #  - releaseVersion: 0.0.1

#           steps:
#             - checkout: self
#               persistCredentials: true
              
#             - script: echo '$(Build.BuildNumber)'
#               displayName: Output Some build number  

#             # - script: echo '$(Rev:r)'
#             #   displayName: Rev rrrrrrr

#             - script: |
#                 git config --global user.email "cggaldes@gmail.com"
#                 git config --global user.name "Christopher Galdes"
#               displayName: setup git
              
#             - script: |
#                 echo "Hello There :wave"
#               displayName: smile and wave

#             - script: |
#                 git tag ${{ service.releaseVersion }}
#                 git push origin ${{ service.releaseVersion }}
#               displayName: git tag for ${{ service.applicationServiceID }}
